{
  "address": "0xaE92815ecEA702a222D197965084EA8532148E64",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe79a627efa0a33a74e8a2dff9762d0224e9416380f762b46d13845a1d7bf2bb7",
  "receipt": {
    "to": null,
    "from": "0xec6cAa60F2f9393DD98fc2E031AA2F43f7dD8532",
    "contractAddress": "0xaE92815ecEA702a222D197965084EA8532148E64",
    "transactionIndex": 118,
    "gasUsed": "966533",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x7f481a981281ff2efbedf63a3f57c06b3dc632e4b8c78fcde0f970ff74696281",
    "transactionHash": "0xe79a627efa0a33a74e8a2dff9762d0224e9416380f762b46d13845a1d7bf2bb7",
    "logs": [],
    "blockNumber": 7848072,
    "cumulativeGasUsed": "27770715",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "fbea2f2c0607d2b1d76238d6b2d45883",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Me\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library  \"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__notOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author Me\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n  // Type Declarations\\n  using PriceConverter for uint256;\\n\\n  // State Variables\\n  uint256 public constant MINIMUM_USD = 50 * 1e18;\\n  address[] private s_funders;\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address private immutable i_owner;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(i_owner == msg.sender, \\\"You cannot withdraw as you are not the owner of this contract\\\");\\n    if (msg.sender != i_owner) {\\n      revert FundMe__notOwner();\\n    }\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  // receive() external payable {\\n  //   fund();\\n  // }\\n\\n  // fallback() external payable {\\n  //   fund();\\n  // }\\n\\n/**\\n *  @notice This function funds this contract\\n *  @dev This implements price feeds as our library\\n *  \\n */\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"Didn't send enough!\\\"\\n    );\\n    s_funders.push(msg.sender);\\n    s_addressToAmountFunded[msg.sender] = msg.value;\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    for (uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    //transfer\\n    // payable(msg.sender).transfer(address(this).balance);\\n\\n    //send\\n    // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    // require(sendSuccess, \\\"Send failed\\\");\\n\\n    //call\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner{\\n    address[] memory funders = s_funders;\\n    for(uint i = 0; i < funders.length; i++){\\n      address funder = funders[i];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address [](0);\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success);\\n  }\\n\\n  function getOwner()public view returns(address){\\n    return i_owner;\\n  }\\n\\n  function getFunders(uint256 index)public view returns(address){\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(address funder) public view returns(uint){\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns(AggregatorV3Interface){\\n    return s_priceFeed;\\n  }\\n}\",\"keccak256\":\"0x2ab9719e64f1a62c26edc08f2ba3a1eb518b06b72e6b01da7f5ed87f9b986cbf\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        //ABI\\n        // //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        //ETH in USD\\n        return uint256(price * 1e10); //1**10 == 10000000000\\n    }\\n\\n    // function getVersion() internal view returns (uint256){\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd  = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x619585f63e86c64df49ed322e0dfc9a27a9369d19f5b1c13f4179c8147df2c0c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200119d3803806200119d83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161101d6200018060003960008181610238015281816104870152818161060001526107f6015261101d6000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461013c5780639e87a5cd14610167578063b60d428814610192578063be2693f01461019c5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a63565b6101a6565b6040516100b49190610aa9565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610af0565b6101ef565b6040516100f19190610b2c565b60405180910390f35b34801561010657600080fd5b5061010f610236565b005b34801561011d57600080fd5b50610126610476565b6040516101339190610aa9565b60405180910390f35b34801561014857600080fd5b50610151610483565b60405161015e9190610b2c565b60405180910390f35b34801561017357600080fd5b5061017c6104ab565b6040516101899190610ba6565b60405180910390f35b61019a6104d5565b005b6101a46105fe565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061020457610203610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bb576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103665760008082815481106102e0576102df610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035e90610c1f565b9150506102be565b50600067ffffffffffffffff81111561038257610381610c67565b5b6040519080825280602002602001820160405280156103b05781602001602082028036833780820191505090505b50600090805190602001906103c6929190610959565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ed90610cc7565b60006040518083038185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b5050905080610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610d39565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610514600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088c90919063ffffffff16565b1015610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c90610da5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610683576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561070657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106bc575b5050505050905060005b815181101561079157600082828151811061072e5761072d610bc1565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078990610c1f565b915050610710565b50600067ffffffffffffffff8111156107ad576107ac610c67565b5b6040519080825280602002602001820160405280156107db5781602001602082028036833780820191505090505b50600090805190602001906107f1929190610959565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083890610cc7565b60006040518083038185875af1925050503d8060008114610875576040519150601f19603f3d011682016040523d82523d6000602084013e61087a565b606091505b505090508061088857600080fd5b5050565b600080610898836108c8565b90506000670de0b6b3a764000085836108b19190610dc5565b6108bb9190610e36565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190610ef4565b5050509150506402540be400816109519190610f6f565b915050919050565b8280548282559060005260206000209081019282156109d2579160200282015b828111156109d15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610979565b5b5090506109df91906109e3565b5090565b5b808211156109fc5760008160009055506001016109e4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3082610a05565b9050919050565b610a4081610a25565b8114610a4b57600080fd5b50565b600081359050610a5d81610a37565b92915050565b600060208284031215610a7957610a78610a00565b5b6000610a8784828501610a4e565b91505092915050565b6000819050919050565b610aa381610a90565b82525050565b6000602082019050610abe6000830184610a9a565b92915050565b610acd81610a90565b8114610ad857600080fd5b50565b600081359050610aea81610ac4565b92915050565b600060208284031215610b0657610b05610a00565b5b6000610b1484828501610adb565b91505092915050565b610b2681610a25565b82525050565b6000602082019050610b416000830184610b1d565b92915050565b6000819050919050565b6000610b6c610b67610b6284610a05565b610b47565b610a05565b9050919050565b6000610b7e82610b51565b9050919050565b6000610b9082610b73565b9050919050565b610ba081610b85565b82525050565b6000602082019050610bbb6000830184610b97565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2a82610a90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5c57610c5b610bf0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb1600083610c96565b9150610cbc82610ca1565b600082019050919050565b6000610cd282610ca4565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d23600b83610cdc565b9150610d2e82610ced565b602082019050919050565b60006020820190508181036000830152610d5281610d16565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d8f601383610cdc565b9150610d9a82610d59565b602082019050919050565b60006020820190508181036000830152610dbe81610d82565b9050919050565b6000610dd082610a90565b9150610ddb83610a90565b9250828202610de981610a90565b91508282048414831517610e0057610dff610bf0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4182610a90565b9150610e4c83610a90565b925082610e5c57610e5b610e07565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e8681610e67565b8114610e9157600080fd5b50565b600081519050610ea381610e7d565b92915050565b6000819050919050565b610ebc81610ea9565b8114610ec757600080fd5b50565b600081519050610ed981610eb3565b92915050565b600081519050610eee81610ac4565b92915050565b600080600080600060a08688031215610f1057610f0f610a00565b5b6000610f1e88828901610e94565b9550506020610f2f88828901610eca565b9450506040610f4088828901610edf565b9350506060610f5188828901610edf565b9250506080610f6288828901610e94565b9150509295509295909350565b6000610f7a82610ea9565b9150610f8583610ea9565b9250828202610f9381610ea9565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fcb57610fca610bf0565b5b8282058414831517610fe057610fdf610bf0565b5b509291505056fea2646970667358221220baf04a3e0cae663140d231a3b86a028a9e5cc91d64d30f53f7a6f202caefbf6664736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461013c5780639e87a5cd14610167578063b60d428814610192578063be2693f01461019c5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a63565b6101a6565b6040516100b49190610aa9565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610af0565b6101ef565b6040516100f19190610b2c565b60405180910390f35b34801561010657600080fd5b5061010f610236565b005b34801561011d57600080fd5b50610126610476565b6040516101339190610aa9565b60405180910390f35b34801561014857600080fd5b50610151610483565b60405161015e9190610b2c565b60405180910390f35b34801561017357600080fd5b5061017c6104ab565b6040516101899190610ba6565b60405180910390f35b61019a6104d5565b005b6101a46105fe565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061020457610203610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bb576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103665760008082815481106102e0576102df610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035e90610c1f565b9150506102be565b50600067ffffffffffffffff81111561038257610381610c67565b5b6040519080825280602002602001820160405280156103b05781602001602082028036833780820191505090505b50600090805190602001906103c6929190610959565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ed90610cc7565b60006040518083038185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b5050905080610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610d39565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610514600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088c90919063ffffffff16565b1015610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c90610da5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610683576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561070657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106bc575b5050505050905060005b815181101561079157600082828151811061072e5761072d610bc1565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078990610c1f565b915050610710565b50600067ffffffffffffffff8111156107ad576107ac610c67565b5b6040519080825280602002602001820160405280156107db5781602001602082028036833780820191505090505b50600090805190602001906107f1929190610959565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083890610cc7565b60006040518083038185875af1925050503d8060008114610875576040519150601f19603f3d011682016040523d82523d6000602084013e61087a565b606091505b505090508061088857600080fd5b5050565b600080610898836108c8565b90506000670de0b6b3a764000085836108b19190610dc5565b6108bb9190610e36565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190610ef4565b5050509150506402540be400816109519190610f6f565b915050919050565b8280548282559060005260206000209081019282156109d2579160200282015b828111156109d15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610979565b5b5090506109df91906109e3565b5090565b5b808211156109fc5760008160009055506001016109e4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3082610a05565b9050919050565b610a4081610a25565b8114610a4b57600080fd5b50565b600081359050610a5d81610a37565b92915050565b600060208284031215610a7957610a78610a00565b5b6000610a8784828501610a4e565b91505092915050565b6000819050919050565b610aa381610a90565b82525050565b6000602082019050610abe6000830184610a9a565b92915050565b610acd81610a90565b8114610ad857600080fd5b50565b600081359050610aea81610ac4565b92915050565b600060208284031215610b0657610b05610a00565b5b6000610b1484828501610adb565b91505092915050565b610b2681610a25565b82525050565b6000602082019050610b416000830184610b1d565b92915050565b6000819050919050565b6000610b6c610b67610b6284610a05565b610b47565b610a05565b9050919050565b6000610b7e82610b51565b9050919050565b6000610b9082610b73565b9050919050565b610ba081610b85565b82525050565b6000602082019050610bbb6000830184610b97565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2a82610a90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5c57610c5b610bf0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb1600083610c96565b9150610cbc82610ca1565b600082019050919050565b6000610cd282610ca4565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d23600b83610cdc565b9150610d2e82610ced565b602082019050919050565b60006020820190508181036000830152610d5281610d16565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d8f601383610cdc565b9150610d9a82610d59565b602082019050919050565b60006020820190508181036000830152610dbe81610d82565b9050919050565b6000610dd082610a90565b9150610ddb83610a90565b9250828202610de981610a90565b91508282048414831517610e0057610dff610bf0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4182610a90565b9150610e4c83610a90565b925082610e5c57610e5b610e07565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e8681610e67565b8114610e9157600080fd5b50565b600081519050610ea381610e7d565b92915050565b6000819050919050565b610ebc81610ea9565b8114610ec757600080fd5b50565b600081519050610ed981610eb3565b92915050565b600081519050610eee81610ac4565b92915050565b600080600080600060a08688031215610f1057610f0f610a00565b5b6000610f1e88828901610e94565b9550506020610f2f88828901610eca565b9450506040610f4088828901610edf565b9350506060610f5188828901610edf565b9250506080610f6288828901610e94565b9150509295509295909350565b6000610f7a82610ea9565b9150610f8583610ea9565b9250828202610f9381610ea9565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fcb57610fca610bf0565b5b8282058414831517610fe057610fdf610bf0565b5b509291505056fea2646970667358221220baf04a3e0cae663140d231a3b86a028a9e5cc91d64d30f53f7a6f202caefbf6664736f6c63430008110033",
  "devdoc": {
    "author": "Me",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library  "
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}